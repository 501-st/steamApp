{"ast":null,"code":"const defaultState = {\n  containers: []\n};\nconst ADD_CONTAINER = \"ADD_CONTAINER\";\nconst REMOVE_CONTAINER = \"REMOVE_CONTAINER\";\nconst ADD_ITEM = \"ADD_ITEM\";\nconst DELETE_ITEM = \"DELETE_ITEM\";\nlet indexOfContainer = 0;\nlet indexOfItem = 0;\nexport const containerReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_CONTAINER:\n      return { ...state,\n        containers: [...state.containers, action.payload]\n      };\n\n    case REMOVE_CONTAINER:\n      return { ...state,\n        containers: state.containers.filter(container => container.id !== action.payload)\n      };\n\n    case ADD_ITEM:\n      return { ...state,\n        containers: state.containers.map(item => {\n          if (item.id === action.payload.containerId) {\n            return { ...item,\n              data: [...item.data, action.payload]\n            };\n          } else return item;\n        })\n      };\n\n    case DELETE_ITEM:\n      return { ...state,\n        containers: state.containers.filter(container => container.id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\nexport const addContainerAction = payload => {\n  indexOfContainer++;\n  payload = { ...payload,\n    id: indexOfContainer\n  };\n  return {\n    type: ADD_CONTAINER,\n    payload\n  };\n};\nexport const removeContainerAction = payload => {\n  return {\n    type: REMOVE_CONTAINER,\n    payload\n  };\n};\nexport const addItem = payload => {\n  indexOfItem++;\n  payload = { ...payload,\n    id: indexOfItem\n  };\n  return {\n    type: ADD_ITEM,\n    payload\n  };\n};\nexport const deleteItem = payload => {\n  return {\n    type: DELETE_ITEM,\n    payload\n  };\n};","map":{"version":3,"names":["defaultState","containers","ADD_CONTAINER","REMOVE_CONTAINER","ADD_ITEM","DELETE_ITEM","indexOfContainer","indexOfItem","containerReducer","state","action","type","payload","filter","container","id","map","item","containerId","data","addContainerAction","removeContainerAction","addItem","deleteItem"],"sources":["/home/daniil/github/steamApp/src/store/containerReducer.js"],"sourcesContent":["const defaultState = {\n    containers: []\n}\n\nconst ADD_CONTAINER = \"ADD_CONTAINER\"\nconst REMOVE_CONTAINER = \"REMOVE_CONTAINER\"\n\nconst ADD_ITEM = \"ADD_ITEM\"\nconst DELETE_ITEM = \"DELETE_ITEM\"\n\nlet indexOfContainer = 0\nlet indexOfItem = 0\n\nexport const containerReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case ADD_CONTAINER:\n            return {...state, containers: [...state.containers, action.payload]}\n        case REMOVE_CONTAINER:\n            return {...state, containers: state.containers.filter(container => container.id !== action.payload)}\n        case ADD_ITEM:\n            return {\n                ...state, containers: state.containers.map((item) => {\n                    if (item.id === action.payload.containerId) {\n                        return {...item, data: [...item.data, action.payload]}\n                    } else return item\n                })\n            }\n        case DELETE_ITEM:\n            return {...state, containers: state.containers.filter(container => container.id !== action.payload)}\n        default:\n            return state\n    }\n}\n\nexport const addContainerAction = (payload) => {\n    indexOfContainer++\n    payload = {...payload, id: indexOfContainer}\n    return {\n        type: ADD_CONTAINER,\n        payload\n    }\n}\n\nexport const removeContainerAction = (payload) => {\n    return {\n        type: REMOVE_CONTAINER,\n        payload\n    }\n}\n\nexport const addItem = (payload) => {\n    indexOfItem++\n    payload = {...payload, id: indexOfItem}\n    return {\n        type: ADD_ITEM,\n        payload\n    }\n}\n\nexport const deleteItem = (payload) => {\n    return {\n        type: DELETE_ITEM,\n        payload\n    }\n}"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,UAAU,EAAE;AADK,CAArB;AAIA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,WAAW,GAAG,aAApB;AAEA,IAAIC,gBAAgB,GAAG,CAAvB;AACA,IAAIC,WAAW,GAAG,CAAlB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBT,YAAyB;EAAA,IAAXU,MAAW;;EAC9D,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKT,aAAL;MACI,OAAO,EAAC,GAAGO,KAAJ;QAAWR,UAAU,EAAE,CAAC,GAAGQ,KAAK,CAACR,UAAV,EAAsBS,MAAM,CAACE,OAA7B;MAAvB,CAAP;;IACJ,KAAKT,gBAAL;MACI,OAAO,EAAC,GAAGM,KAAJ;QAAWR,UAAU,EAAEQ,KAAK,CAACR,UAAN,CAAiBY,MAAjB,CAAwBC,SAAS,IAAIA,SAAS,CAACC,EAAV,KAAiBL,MAAM,CAACE,OAA7D;MAAvB,CAAP;;IACJ,KAAKR,QAAL;MACI,OAAO,EACH,GAAGK,KADA;QACOR,UAAU,EAAEQ,KAAK,CAACR,UAAN,CAAiBe,GAAjB,CAAsBC,IAAD,IAAU;UACjD,IAAIA,IAAI,CAACF,EAAL,KAAYL,MAAM,CAACE,OAAP,CAAeM,WAA/B,EAA4C;YACxC,OAAO,EAAC,GAAGD,IAAJ;cAAUE,IAAI,EAAE,CAAC,GAAGF,IAAI,CAACE,IAAT,EAAeT,MAAM,CAACE,OAAtB;YAAhB,CAAP;UACH,CAFD,MAEO,OAAOK,IAAP;QACV,CAJqB;MADnB,CAAP;;IAOJ,KAAKZ,WAAL;MACI,OAAO,EAAC,GAAGI,KAAJ;QAAWR,UAAU,EAAEQ,KAAK,CAACR,UAAN,CAAiBY,MAAjB,CAAwBC,SAAS,IAAIA,SAAS,CAACC,EAAV,KAAiBL,MAAM,CAACE,OAA7D;MAAvB,CAAP;;IACJ;MACI,OAAOH,KAAP;EAhBR;AAkBH,CAnBM;AAqBP,OAAO,MAAMW,kBAAkB,GAAIR,OAAD,IAAa;EAC3CN,gBAAgB;EAChBM,OAAO,GAAG,EAAC,GAAGA,OAAJ;IAAaG,EAAE,EAAET;EAAjB,CAAV;EACA,OAAO;IACHK,IAAI,EAAET,aADH;IAEHU;EAFG,CAAP;AAIH,CAPM;AASP,OAAO,MAAMS,qBAAqB,GAAIT,OAAD,IAAa;EAC9C,OAAO;IACHD,IAAI,EAAER,gBADH;IAEHS;EAFG,CAAP;AAIH,CALM;AAOP,OAAO,MAAMU,OAAO,GAAIV,OAAD,IAAa;EAChCL,WAAW;EACXK,OAAO,GAAG,EAAC,GAAGA,OAAJ;IAAaG,EAAE,EAAER;EAAjB,CAAV;EACA,OAAO;IACHI,IAAI,EAAEP,QADH;IAEHQ;EAFG,CAAP;AAIH,CAPM;AASP,OAAO,MAAMW,UAAU,GAAIX,OAAD,IAAa;EACnC,OAAO;IACHD,IAAI,EAAEN,WADH;IAEHO;EAFG,CAAP;AAIH,CALM"},"metadata":{},"sourceType":"module"}