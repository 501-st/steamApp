{"ast":null,"code":"const defaultState = {\n  containers: []\n};\nconst ADD_CONTAINER = \"ADD_CONTAINER\";\nconst REMOVE_CONTAINER = \"REMOVE_CONTAINER\";\nconst ADD_ITEM = \"ADD_ITEM\";\nconst ADD_BENEFIT = \"ADD_BENEFIT\";\nconst DELETE_ITEM = \"DELETE_ITEM\";\nconst CONTAINER_STATUS_CHECKED = \"CONTAINER_STATUS_CHECKED\";\nlet indexOfContainer = 0;\nlet indexOfItem = 0;\nexport const containerReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_CONTAINER:\n      return { ...state,\n        containers: [...state.containers, action.payload]\n      };\n\n    case REMOVE_CONTAINER:\n      return { ...state,\n        containers: state.containers.filter(container => container.id !== action.payload)\n      };\n\n    case CONTAINER_STATUS_CHECKED:\n      return { ...state,\n        containers: state.containers.map(container => {\n          if (container.id === action.payload.containerId) {\n            return { ...container,\n              checked: true\n            };\n          } else return container;\n        })\n      };\n\n    case ADD_ITEM:\n      return { ...state,\n        containers: state.containers.map(container => {\n          if (container.id === action.payload.containerId) {\n            return { ...container,\n              checked: false,\n              data: [...container.data, action.payload]\n            };\n          } else return container;\n        })\n      };\n\n    case ADD_BENEFIT:\n      return { ...state,\n        containers: state.containers.map(container => {\n          if (container.id === action.payload.containerId) {\n            return { ...container,\n              benefit: action.payload.benefit\n            };\n          } else return container;\n        })\n      };\n\n    case DELETE_ITEM:\n      return { ...state,\n        containers: state.containers.map(container => {\n          if (container.id === action.payload.containerId) {\n            return { ...container,\n              data: container.data.filter(item => item.id !== action.payload.itemId)\n            };\n          } else return container;\n        })\n      };\n\n    default:\n      return state;\n  }\n};\nexport const addContainerAction = payload => {\n  indexOfContainer++;\n  payload = { ...payload,\n    id: indexOfContainer\n  };\n  return {\n    type: ADD_CONTAINER,\n    payload\n  };\n};\nexport const removeContainerAction = payload => {\n  return {\n    type: REMOVE_CONTAINER,\n    payload\n  };\n};\nexport const containerCheckedAction = payload => {\n  return {\n    type: CONTAINER_STATUS_CHECKED,\n    payload\n  };\n};\nexport const addBenefitToContainerAction = payload => {\n  return {\n    type: ADD_BENEFIT,\n    payload\n  };\n};\nexport const addItem = payload => {\n  indexOfItem++;\n  payload = { ...payload,\n    id: indexOfItem\n  };\n  return {\n    type: ADD_ITEM,\n    payload\n  };\n};\nexport const deleteItem = payload => {\n  return {\n    type: DELETE_ITEM,\n    payload\n  };\n};","map":{"version":3,"names":["defaultState","containers","ADD_CONTAINER","REMOVE_CONTAINER","ADD_ITEM","ADD_BENEFIT","DELETE_ITEM","CONTAINER_STATUS_CHECKED","indexOfContainer","indexOfItem","containerReducer","state","action","type","payload","filter","container","id","map","containerId","checked","data","benefit","item","itemId","addContainerAction","removeContainerAction","containerCheckedAction","addBenefitToContainerAction","addItem","deleteItem"],"sources":["/home/daniil/github/steamApp/src/store/containerReducer.js"],"sourcesContent":["const defaultState = {\n    containers: []\n}\n\nconst ADD_CONTAINER = \"ADD_CONTAINER\"\nconst REMOVE_CONTAINER = \"REMOVE_CONTAINER\"\n\nconst ADD_ITEM = \"ADD_ITEM\"\nconst ADD_BENEFIT = \"ADD_BENEFIT\"\nconst DELETE_ITEM = \"DELETE_ITEM\"\nconst CONTAINER_STATUS_CHECKED = \"CONTAINER_STATUS_CHECKED\"\n\nlet indexOfContainer = 0\nlet indexOfItem = 0\n\nexport const containerReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case ADD_CONTAINER:\n            return {...state, containers: [...state.containers, action.payload]}\n        case REMOVE_CONTAINER:\n            return {...state, containers: state.containers.filter(container => container.id !== action.payload)}\n        case CONTAINER_STATUS_CHECKED:\n            return {\n                ...state, containers: state.containers.map((container) => {\n                    if (container.id === action.payload.containerId) {\n                        return {...container, checked: true}\n                    } else return container\n                })\n            }\n        case ADD_ITEM:\n            return {\n                ...state, containers: state.containers.map((container) => {\n                    if (container.id === action.payload.containerId) {\n                        return {...container, checked: false, data: [...container.data, action.payload]}\n                    } else return container\n                })\n            }\n        case ADD_BENEFIT:\n            return {\n                ...state, containers: state.containers.map((container) => {\n                    if (container.id === action.payload.containerId) {\n                        return {...container, benefit: action.payload.benefit}\n                    } else return container\n                })\n            }\n        case DELETE_ITEM:\n            return {\n                ...state, containers: state.containers.map((container) => {\n                    if (container.id === action.payload.containerId) {\n                        return {...container, data: container.data.filter(item => item.id !== action.payload.itemId)}\n                    } else return container\n                })\n            }\n        default:\n            return state\n    }\n}\n\nexport const addContainerAction = (payload) => {\n    indexOfContainer++\n    payload = {...payload, id: indexOfContainer}\n    return {\n        type: ADD_CONTAINER,\n        payload\n    }\n}\n\nexport const removeContainerAction = (payload) => {\n    return {\n        type: REMOVE_CONTAINER,\n        payload\n    }\n}\n\nexport const containerCheckedAction = (payload) => {\n    return {\n        type: CONTAINER_STATUS_CHECKED,\n        payload\n    }\n}\n\nexport const addBenefitToContainerAction = (payload) => {\n    return {\n        type: ADD_BENEFIT,\n        payload\n    }\n}\n\nexport const addItem = (payload) => {\n    indexOfItem++\n    payload = {...payload, id: indexOfItem}\n    return {\n        type: ADD_ITEM,\n        payload\n    }\n}\n\nexport const deleteItem = (payload) => {\n    return {\n        type: DELETE_ITEM,\n        payload\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}