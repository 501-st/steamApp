{"ast":null,"code":"// Import the required dependencies\nconst cheerio = require('cheerio');\n\nconst CSGOCdn = require('csgo-cdn'); // Import pre-written data related resources \n\n\nconst currency = require('../resources/ESteamCurrency');\n\nconst data = require('../resources/ESteamDataFormat');\n/**\r\n * Helper class with a wide array of functions.\r\n */\n\n\nclass Helpers {\n  /**\r\n   * Set the currency to use for Steam Community Market prices.\r\n   * @param { string } option Any currency code used by the Steam Community Market represented as a String.\r\n   * @returns { number } A number representing the matching currency code.\r\n  */\n  static setCurrency(option) {\n    // Return the currency code as a number\n    return Object.prototype.hasOwnProperty.call(currency, option) ? currency[option] : currency['USD'];\n  }\n  /**\r\n   * Set the desired data format for a response object.\r\n   * @param { string } option Any data format accepted or used by Steam represented as a String.\r\n   * @returns { string } A valid data format for representing objects. \r\n   */\n\n\n  static setDataFormat(option) {\n    // Return the data option as a formated String\n    return data && data.includes(option) ? option : data[0];\n  }\n  /**\r\n   * Sets the new CDN for CS:GO item images.\r\n   * @param { CSGOCdn } option Any valid csgo-cdn instance.\r\n   * @returns { CSGOCdn | null } Sets a custom CDN instance for CS:GO items.\r\n   */\n\n\n  static setCDN(option) {\n    // Set the value of the CDN object\n    return option instanceof CSGOCdn ? option : null;\n  }\n  /**\r\n   * \"Resize\" a Steam Community Market listing URL to a preferred image size.\r\n   * @param { string } image A default Steam Community Market listing image URL.\r\n   * @param { number } pixels The preferred image size in pixels.\r\n   * @returns { string } A new CDN URL with the preferred image size (Steam Community CDN only).\r\n   */\n\n\n  static resizeImage(image, pixels) {\n    // Check if the parsed image URL contains the default item listing size.\n    // If true, replace the image urls default size with the preferred size.\n    // If false, return the original image url.\n    return image.includes('62fx62f') ? image.replace('62fx62f', `${pixels}fx${pixels}f`) : image;\n  }\n  /**\r\n   * Load an image froma HTML page.\r\n   * @param { string | Buffer } html A HTML body represented as a String or Buffer.\r\n   * @param { number } size The sife of the raw image in pixels.\r\n   * @returns { string } The image url from the Steam Community market listing.\r\n   */\n\n\n  static loadImage(html, size) {\n    // Load the HTML using Cheerio\n    const $ = cheerio.load(html); // Get the image source url\n\n    const image = $('img.market_listing_item_img').attr('src'); // No image was loaded trough the HTML\n\n    if (image === null || image === undefined) return 'No image available'; // Return the image\n\n    return this.resizeImage(image, size);\n  }\n  /**\r\n   * Get an item's market image from a Steam Community Market listing.\r\n   * @param { CSGOCdn } cdn An instance of csgo-cdn that is ready.\r\n   * @param { string } market_hash_name A marketable item's name.\r\n   * @param { number } appid The unique app to the item's market_hash name.\r\n   * @param { string | Buffer } html The HTML from the Axios response object.\r\n   * @param { number } size The desired image size in pixels (Non-CDN only).\r\n   * @returns { string } The image retrieved from the Steam Community Market listing matching the market_hash_name and appid parameters.\r\n   */\n\n\n  static getImageFromListing(cdn, market_hash_name, appid, html, size) {\n    // Return the image\n    return cdn !== null && cdn.ready && appid === 730 ? cdn.getItemNameURL(market_hash_name) : this.loadImage(html, size);\n  }\n\n} // Export the Helper class and its static functions\n\n\nmodule.exports = Helpers;","map":{"version":3,"names":["cheerio","require","CSGOCdn","currency","data","Helpers","setCurrency","option","Object","prototype","hasOwnProperty","call","setDataFormat","includes","setCDN","resizeImage","image","pixels","replace","loadImage","html","size","$","load","attr","undefined","getImageFromListing","cdn","market_hash_name","appid","ready","getItemNameURL","module","exports"],"sources":["/home/daniil/github/steamApp/node_modules/steam-market-fetcher/helpers/index.js"],"sourcesContent":["// Import the required dependencies\r\nconst cheerio = require('cheerio');\r\nconst CSGOCdn = require('csgo-cdn');\r\n\r\n// Import pre-written data related resources \r\nconst currency = require('../resources/ESteamCurrency');\r\nconst data = require('../resources/ESteamDataFormat');\r\n\r\n/**\r\n * Helper class with a wide array of functions.\r\n */\r\nclass Helpers {\r\n    /**\r\n     * Set the currency to use for Steam Community Market prices.\r\n     * @param { string } option Any currency code used by the Steam Community Market represented as a String.\r\n     * @returns { number } A number representing the matching currency code.\r\n    */\r\n    static setCurrency(option) {\r\n        // Return the currency code as a number\r\n        return (Object.prototype.hasOwnProperty.call(currency, option)) ? currency[option] : currency['USD'];\r\n    }\r\n\r\n    /**\r\n     * Set the desired data format for a response object.\r\n     * @param { string } option Any data format accepted or used by Steam represented as a String.\r\n     * @returns { string } A valid data format for representing objects. \r\n     */\r\n    static setDataFormat(option) {\r\n        // Return the data option as a formated String\r\n        return (data && data.includes(option)) ? option : data[0];\r\n    }\r\n\r\n    /**\r\n     * Sets the new CDN for CS:GO item images.\r\n     * @param { CSGOCdn } option Any valid csgo-cdn instance.\r\n     * @returns { CSGOCdn | null } Sets a custom CDN instance for CS:GO items.\r\n     */\r\n    static setCDN(option) {\r\n        // Set the value of the CDN object\r\n        return (option instanceof CSGOCdn) ? option : null;\r\n    }\r\n\r\n    /**\r\n     * \"Resize\" a Steam Community Market listing URL to a preferred image size.\r\n     * @param { string } image A default Steam Community Market listing image URL.\r\n     * @param { number } pixels The preferred image size in pixels.\r\n     * @returns { string } A new CDN URL with the preferred image size (Steam Community CDN only).\r\n     */\r\n    static resizeImage(image, pixels) {\r\n        // Check if the parsed image URL contains the default item listing size.\r\n        // If true, replace the image urls default size with the preferred size.\r\n        // If false, return the original image url.\r\n        return (image.includes('62fx62f')) ? image.replace('62fx62f', `${pixels}fx${pixels}f`) : image;\r\n    }\r\n\r\n    /**\r\n     * Load an image froma HTML page.\r\n     * @param { string | Buffer } html A HTML body represented as a String or Buffer.\r\n     * @param { number } size The sife of the raw image in pixels.\r\n     * @returns { string } The image url from the Steam Community market listing.\r\n     */\r\n    static loadImage(html, size) {\r\n        // Load the HTML using Cheerio\r\n        const $ = cheerio.load(html);\r\n\r\n        // Get the image source url\r\n        const image = $('img.market_listing_item_img').attr('src');\r\n\r\n        // No image was loaded trough the HTML\r\n        if (image === null || image === undefined) return 'No image available';\r\n\r\n        // Return the image\r\n        return this.resizeImage(image, size);\r\n    }\r\n\r\n    /**\r\n     * Get an item's market image from a Steam Community Market listing.\r\n     * @param { CSGOCdn } cdn An instance of csgo-cdn that is ready.\r\n     * @param { string } market_hash_name A marketable item's name.\r\n     * @param { number } appid The unique app to the item's market_hash name.\r\n     * @param { string | Buffer } html The HTML from the Axios response object.\r\n     * @param { number } size The desired image size in pixels (Non-CDN only).\r\n     * @returns { string } The image retrieved from the Steam Community Market listing matching the market_hash_name and appid parameters.\r\n     */\r\n    static getImageFromListing(cdn, market_hash_name, appid, html, size) {\r\n        // Return the image\r\n        return (cdn !== null && cdn.ready && appid === 730) ? cdn.getItemNameURL(market_hash_name) : this.loadImage(html, size);\r\n    }\r\n}\r\n\r\n// Export the Helper class and its static functions\r\nmodule.exports = Helpers;"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB,C,CAEA;;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,6BAAD,CAAxB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,+BAAD,CAApB;AAEA;AACA;AACA;;;AACA,MAAMI,OAAN,CAAc;EACV;AACJ;AACA;AACA;AACA;EACsB,OAAXC,WAAW,CAACC,MAAD,EAAS;IACvB;IACA,OAAQC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,QAArC,EAA+CI,MAA/C,CAAD,GAA2DJ,QAAQ,CAACI,MAAD,CAAnE,GAA8EJ,QAAQ,CAAC,KAAD,CAA7F;EACH;EAED;AACJ;AACA;AACA;AACA;;;EACwB,OAAbS,aAAa,CAACL,MAAD,EAAS;IACzB;IACA,OAAQH,IAAI,IAAIA,IAAI,CAACS,QAAL,CAAcN,MAAd,CAAT,GAAkCA,MAAlC,GAA2CH,IAAI,CAAC,CAAD,CAAtD;EACH;EAED;AACJ;AACA;AACA;AACA;;;EACiB,OAANU,MAAM,CAACP,MAAD,EAAS;IAClB;IACA,OAAQA,MAAM,YAAYL,OAAnB,GAA8BK,MAA9B,GAAuC,IAA9C;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;;;EACsB,OAAXQ,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;IAC9B;IACA;IACA;IACA,OAAQD,KAAK,CAACH,QAAN,CAAe,SAAf,CAAD,GAA8BG,KAAK,CAACE,OAAN,CAAc,SAAd,EAA0B,GAAED,MAAO,KAAIA,MAAO,GAA9C,CAA9B,GAAkFD,KAAzF;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;;;EACoB,OAATG,SAAS,CAACC,IAAD,EAAOC,IAAP,EAAa;IACzB;IACA,MAAMC,CAAC,GAAGtB,OAAO,CAACuB,IAAR,CAAaH,IAAb,CAAV,CAFyB,CAIzB;;IACA,MAAMJ,KAAK,GAAGM,CAAC,CAAC,6BAAD,CAAD,CAAiCE,IAAjC,CAAsC,KAAtC,CAAd,CALyB,CAOzB;;IACA,IAAIR,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKS,SAAhC,EAA2C,OAAO,oBAAP,CARlB,CAUzB;;IACA,OAAO,KAAKV,WAAL,CAAiBC,KAAjB,EAAwBK,IAAxB,CAAP;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAC8B,OAAnBK,mBAAmB,CAACC,GAAD,EAAMC,gBAAN,EAAwBC,KAAxB,EAA+BT,IAA/B,EAAqCC,IAArC,EAA2C;IACjE;IACA,OAAQM,GAAG,KAAK,IAAR,IAAgBA,GAAG,CAACG,KAApB,IAA6BD,KAAK,KAAK,GAAxC,GAA+CF,GAAG,CAACI,cAAJ,CAAmBH,gBAAnB,CAA/C,GAAsF,KAAKT,SAAL,CAAeC,IAAf,EAAqBC,IAArB,CAA7F;EACH;;AA5ES,C,CA+Ed;;;AACAW,MAAM,CAACC,OAAP,GAAiB5B,OAAjB"},"metadata":{},"sourceType":"script"}