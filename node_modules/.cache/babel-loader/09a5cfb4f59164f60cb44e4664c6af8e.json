{"ast":null,"code":"!function (factory) {\n  var global = this;\n  module.exports = factory(global);\n}(function (global) {\n  \"use strict\";\n\n  function is(obj, Ctor) {\n    return \"object\" != typeof obj || null === obj ? !1 : obj.constructor === Ctor || Object.prototype.toString.call(obj) === \"[object \" + Ctor.name + \"]\";\n  }\n\n  function arrayFrom(arrayLike, forceCopy) {\n    return !forceCopy && is(arrayLike, Array) ? arrayLike : Array.prototype.slice.call(arrayLike);\n  }\n\n  function defined(value, defaultValue) {\n    return void 0 !== value ? value : defaultValue;\n  }\n\n  function jDataView(buffer, byteOffset, byteLength, littleEndian) {\n    if (jDataView.is(buffer)) {\n      var result = buffer.slice(byteOffset, byteOffset + byteLength);\n      return result._littleEndian = defined(littleEndian, result._littleEndian), result;\n    }\n\n    if (!jDataView.is(this)) return new jDataView(buffer, byteOffset, byteLength, littleEndian);\n    if (this.buffer = buffer = jDataView.wrapBuffer(buffer), this._isArrayBuffer = compatibility.ArrayBuffer && is(buffer, ArrayBuffer), this._isPixelData = !1, this._isDataView = compatibility.DataView && this._isArrayBuffer, this._isNodeBuffer = !0 && compatibility.NodeBuffer && is(buffer, Buffer), !this._isNodeBuffer && !this._isArrayBuffer && !is(buffer, Array)) throw new TypeError(\"jDataView buffer has an incompatible type\");\n    this._littleEndian = !!littleEndian;\n    var bufferLength = \"byteLength\" in buffer ? buffer.byteLength : buffer.length;\n    this.byteOffset = byteOffset = defined(byteOffset, 0), this.byteLength = byteLength = defined(byteLength, bufferLength - byteOffset), this._offset = this._bitOffset = 0, this._isDataView ? this._view = new DataView(buffer, byteOffset, byteLength) : this._checkBounds(byteOffset, byteLength, bufferLength), this._engineAction = this._isDataView ? this._dataViewAction : this._isNodeBuffer ? this._nodeBufferAction : this._isArrayBuffer ? this._arrayBufferAction : this._arrayAction;\n  }\n\n  function getCharCodes(string) {\n    if (compatibility.NodeBuffer) return new Buffer(string, \"binary\");\n\n    for (var Type = compatibility.ArrayBuffer ? Uint8Array : Array, codes = new Type(string.length), i = 0, length = string.length; length > i; i++) codes[i] = 255 & string.charCodeAt(i);\n\n    return codes;\n  }\n\n  function pow2(n) {\n    return n >= 0 && 31 > n ? 1 << n : pow2[n] || (pow2[n] = Math.pow(2, n));\n  }\n\n  function Uint64(lo, hi) {\n    this.lo = lo, this.hi = hi;\n  }\n\n  function Int64() {\n    Uint64.apply(this, arguments);\n  }\n\n  var compatibility = {\n    NodeBuffer: !0 && \"Buffer\" in global,\n    DataView: \"DataView\" in global,\n    ArrayBuffer: \"ArrayBuffer\" in global,\n    PixelData: !1\n  },\n      TextEncoder = global.TextEncoder,\n      TextDecoder = global.TextDecoder;\n  compatibility.NodeBuffer && !function (buffer) {\n    try {\n      buffer.writeFloatLE(1 / 0, 0);\n    } catch (e) {\n      compatibility.NodeBuffer = !1;\n    }\n  }(new Buffer(4));\n  var dataTypes = {\n    Int8: 1,\n    Int16: 2,\n    Int32: 4,\n    Uint8: 1,\n    Uint16: 2,\n    Uint32: 4,\n    Float32: 4,\n    Float64: 8\n  };\n  jDataView.wrapBuffer = function (buffer) {\n    switch (typeof buffer) {\n      case \"number\":\n        if (compatibility.NodeBuffer) buffer = new Buffer(buffer), buffer.fill(0);else if (compatibility.ArrayBuffer) buffer = new Uint8Array(buffer).buffer;else {\n          buffer = new Array(buffer);\n\n          for (var i = 0; i < buffer.length; i++) buffer[i] = 0;\n        }\n        return buffer;\n\n      case \"string\":\n        buffer = getCharCodes(buffer);\n\n      default:\n        return \"length\" in buffer && !(compatibility.NodeBuffer && is(buffer, Buffer) || compatibility.ArrayBuffer && is(buffer, ArrayBuffer)) && (compatibility.NodeBuffer ? buffer = new Buffer(buffer) : compatibility.ArrayBuffer ? is(buffer, ArrayBuffer) || (buffer = new Uint8Array(buffer).buffer, is(buffer, ArrayBuffer) || (buffer = new Uint8Array(arrayFrom(buffer, !0)).buffer)) : buffer = arrayFrom(buffer)), buffer;\n    }\n  }, jDataView.is = function (view) {\n    return view && view.jDataView;\n  }, jDataView.from = function () {\n    return new jDataView(arguments);\n  }, jDataView.Uint64 = Uint64, Uint64.prototype = {\n    valueOf: function () {\n      return this.lo + pow2(32) * this.hi;\n    },\n    toString: function () {\n      return Number.prototype.toString.apply(this.valueOf(), arguments);\n    }\n  }, Uint64.fromNumber = function (number) {\n    var hi = Math.floor(number / pow2(32)),\n        lo = number - hi * pow2(32);\n    return new Uint64(lo, hi);\n  }, jDataView.Int64 = Int64, Int64.prototype = \"create\" in Object ? Object.create(Uint64.prototype) : new Uint64(), Int64.prototype.valueOf = function () {\n    return this.hi < pow2(31) ? Uint64.prototype.valueOf.apply(this, arguments) : -(pow2(32) - this.lo + pow2(32) * (pow2(32) - 1 - this.hi));\n  }, Int64.fromNumber = function (number) {\n    var lo, hi;\n\n    if (number >= 0) {\n      var unsigned = Uint64.fromNumber(number);\n      lo = unsigned.lo, hi = unsigned.hi;\n    } else hi = Math.floor(number / pow2(32)), lo = number - hi * pow2(32), hi += pow2(32);\n\n    return new Int64(lo, hi);\n  };\n  var proto = jDataView.prototype = {\n    compatibility: compatibility,\n    jDataView: !0,\n    _checkBounds: function (byteOffset, byteLength, maxLength) {\n      if (\"number\" != typeof byteOffset) throw new TypeError(\"Offset is not a number.\");\n      if (\"number\" != typeof byteLength) throw new TypeError(\"Size is not a number.\");\n      if (0 > byteLength) throw new RangeError(\"Length is negative.\");\n      if (0 > byteOffset || byteOffset + byteLength > defined(maxLength, this.byteLength)) throw new RangeError(\"Offsets are out of bounds.\");\n    },\n    _action: function (type, isReadAction, byteOffset, littleEndian, value) {\n      return this._engineAction(type, isReadAction, defined(byteOffset, this._offset), defined(littleEndian, this._littleEndian), value);\n    },\n    _dataViewAction: function (type, isReadAction, byteOffset, littleEndian, value) {\n      return this._offset = byteOffset + dataTypes[type], isReadAction ? this._view[\"get\" + type](byteOffset, littleEndian) : this._view[\"set\" + type](byteOffset, value, littleEndian);\n    },\n    _arrayBufferAction: function (type, isReadAction, byteOffset, littleEndian, value) {\n      var typedArray,\n          size = dataTypes[type],\n          TypedArray = global[type + \"Array\"];\n      if (littleEndian = defined(littleEndian, this._littleEndian), 1 === size || (this.byteOffset + byteOffset) % size === 0 && littleEndian) return typedArray = new TypedArray(this.buffer, this.byteOffset + byteOffset, 1), this._offset = byteOffset + size, isReadAction ? typedArray[0] : typedArray[0] = value;\n      var bytes = new Uint8Array(isReadAction ? this.getBytes(size, byteOffset, littleEndian, !0) : size);\n      return typedArray = new TypedArray(bytes.buffer, 0, 1), isReadAction ? typedArray[0] : (typedArray[0] = value, void this._setBytes(byteOffset, bytes, littleEndian));\n    },\n    _arrayAction: function (type, isReadAction, byteOffset, littleEndian, value) {\n      return isReadAction ? this[\"_get\" + type](byteOffset, littleEndian) : this[\"_set\" + type](byteOffset, value, littleEndian);\n    },\n    _getBytes: function (length, byteOffset, littleEndian) {\n      littleEndian = defined(littleEndian, this._littleEndian), byteOffset = defined(byteOffset, this._offset), length = defined(length, this.byteLength - byteOffset), this._checkBounds(byteOffset, length), byteOffset += this.byteOffset, this._offset = byteOffset - this.byteOffset + length;\n      var result = this._isArrayBuffer ? new Uint8Array(this.buffer, byteOffset, length) : (this.buffer.slice || Array.prototype.slice).call(this.buffer, byteOffset, byteOffset + length);\n      return littleEndian || 1 >= length ? result : arrayFrom(result).reverse();\n    },\n    getBytes: function (length, byteOffset, littleEndian, toArray) {\n      var result = this._getBytes(length, byteOffset, defined(littleEndian, !0));\n\n      return toArray ? arrayFrom(result) : result;\n    },\n    _setBytes: function (byteOffset, bytes, littleEndian) {\n      var length = bytes.length;\n\n      if (0 !== length) {\n        if (littleEndian = defined(littleEndian, this._littleEndian), byteOffset = defined(byteOffset, this._offset), this._checkBounds(byteOffset, length), !littleEndian && length > 1 && (bytes = arrayFrom(bytes, !0).reverse()), byteOffset += this.byteOffset, this._isArrayBuffer) new Uint8Array(this.buffer, byteOffset, length).set(bytes);else if (this._isNodeBuffer) new Buffer(bytes).copy(this.buffer, byteOffset);else for (var i = 0; length > i; i++) this.buffer[byteOffset + i] = bytes[i];\n        this._offset = byteOffset - this.byteOffset + length;\n      }\n    },\n    setBytes: function (byteOffset, bytes, littleEndian) {\n      this._setBytes(byteOffset, bytes, defined(littleEndian, !0));\n    },\n    getString: function (byteLength, byteOffset, encoding) {\n      if (this._isNodeBuffer) return byteOffset = defined(byteOffset, this._offset), byteLength = defined(byteLength, this.byteLength - byteOffset), this._checkBounds(byteOffset, byteLength), this._offset = byteOffset + byteLength, this.buffer.toString(encoding || \"binary\", this.byteOffset + byteOffset, this.byteOffset + this._offset);\n\n      var bytes = this._getBytes(byteLength, byteOffset, !0);\n\n      if (encoding = \"utf8\" === encoding ? \"utf-8\" : encoding || \"binary\", TextDecoder && \"binary\" !== encoding) return new TextDecoder(encoding).decode(this._isArrayBuffer ? bytes : new Uint8Array(bytes));\n      var string = \"\";\n      byteLength = bytes.length;\n\n      for (var i = 0; byteLength > i; i++) string += String.fromCharCode(bytes[i]);\n\n      return \"utf-8\" === encoding && (string = decodeURIComponent(escape(string))), string;\n    },\n    setString: function (byteOffset, subString, encoding) {\n      if (this._isNodeBuffer) return byteOffset = defined(byteOffset, this._offset), this._checkBounds(byteOffset, subString.length), void (this._offset = byteOffset + this.buffer.write(subString, this.byteOffset + byteOffset, encoding || \"binary\"));\n      encoding = \"utf8\" === encoding ? \"utf-8\" : encoding || \"binary\";\n      var bytes;\n      TextEncoder && \"binary\" !== encoding ? bytes = new TextEncoder(encoding).encode(subString) : (\"utf-8\" === encoding && (subString = unescape(encodeURIComponent(subString))), bytes = getCharCodes(subString)), this._setBytes(byteOffset, bytes, !0);\n    },\n    getChar: function (byteOffset) {\n      return this.getString(1, byteOffset);\n    },\n    setChar: function (byteOffset, character) {\n      this.setString(byteOffset, character);\n    },\n    tell: function () {\n      return this._offset;\n    },\n    seek: function (byteOffset) {\n      return this._checkBounds(byteOffset, 0), this._offset = byteOffset;\n    },\n    skip: function (byteLength) {\n      return this.seek(this._offset + byteLength);\n    },\n    slice: function (start, end, forceCopy) {\n      function normalizeOffset(offset, byteLength) {\n        return 0 > offset ? offset + byteLength : offset;\n      }\n\n      return start = normalizeOffset(start, this.byteLength), end = normalizeOffset(defined(end, this.byteLength), this.byteLength), forceCopy ? new jDataView(this.getBytes(end - start, start, !0, !0), void 0, void 0, this._littleEndian) : new jDataView(this.buffer, this.byteOffset + start, end - start, this._littleEndian);\n    },\n    alignBy: function (byteCount) {\n      return this._bitOffset = 0, 1 !== defined(byteCount, 1) ? this.skip(byteCount - (this._offset % byteCount || byteCount)) : this._offset;\n    },\n    _getFloat64: function (byteOffset, littleEndian) {\n      var b = this._getBytes(8, byteOffset, littleEndian),\n          sign = 1 - 2 * (b[7] >> 7),\n          exponent = ((b[7] << 1 & 255) << 3 | b[6] >> 4) - 1023,\n          mantissa = (15 & b[6]) * pow2(48) + b[5] * pow2(40) + b[4] * pow2(32) + b[3] * pow2(24) + b[2] * pow2(16) + b[1] * pow2(8) + b[0];\n\n      return 1024 === exponent ? 0 !== mantissa ? 0 / 0 : 1 / 0 * sign : -1023 === exponent ? sign * mantissa * pow2(-1074) : sign * (1 + mantissa * pow2(-52)) * pow2(exponent);\n    },\n    _getFloat32: function (byteOffset, littleEndian) {\n      var b = this._getBytes(4, byteOffset, littleEndian),\n          sign = 1 - 2 * (b[3] >> 7),\n          exponent = (b[3] << 1 & 255 | b[2] >> 7) - 127,\n          mantissa = (127 & b[2]) << 16 | b[1] << 8 | b[0];\n\n      return 128 === exponent ? 0 !== mantissa ? 0 / 0 : 1 / 0 * sign : -127 === exponent ? sign * mantissa * pow2(-149) : sign * (1 + mantissa * pow2(-23)) * pow2(exponent);\n    },\n    _get64: function (Type, byteOffset, littleEndian) {\n      littleEndian = defined(littleEndian, this._littleEndian), byteOffset = defined(byteOffset, this._offset);\n\n      for (var parts = littleEndian ? [0, 4] : [4, 0], i = 0; 2 > i; i++) parts[i] = this.getUint32(byteOffset + parts[i], littleEndian);\n\n      return this._offset = byteOffset + 8, new Type(parts[0], parts[1]);\n    },\n    getInt64: function (byteOffset, littleEndian) {\n      return this._get64(Int64, byteOffset, littleEndian);\n    },\n    getUint64: function (byteOffset, littleEndian) {\n      return this._get64(Uint64, byteOffset, littleEndian);\n    },\n    _getInt32: function (byteOffset, littleEndian) {\n      var b = this._getBytes(4, byteOffset, littleEndian);\n\n      return b[3] << 24 | b[2] << 16 | b[1] << 8 | b[0];\n    },\n    _getUint32: function (byteOffset, littleEndian) {\n      return this._getInt32(byteOffset, littleEndian) >>> 0;\n    },\n    _getInt16: function (byteOffset, littleEndian) {\n      return this._getUint16(byteOffset, littleEndian) << 16 >> 16;\n    },\n    _getUint16: function (byteOffset, littleEndian) {\n      var b = this._getBytes(2, byteOffset, littleEndian);\n\n      return b[1] << 8 | b[0];\n    },\n    _getInt8: function (byteOffset) {\n      return this._getUint8(byteOffset) << 24 >> 24;\n    },\n    _getUint8: function (byteOffset) {\n      return this._getBytes(1, byteOffset)[0];\n    },\n    _getBitRangeData: function (bitLength, byteOffset) {\n      var startBit = (defined(byteOffset, this._offset) << 3) + this._bitOffset,\n          endBit = startBit + bitLength,\n          start = startBit >>> 3,\n          end = endBit + 7 >>> 3,\n          b = this._getBytes(end - start, start, !0),\n          wideValue = 0;\n\n      (this._bitOffset = 7 & endBit) && (this._bitOffset -= 8);\n\n      for (var i = 0, length = b.length; length > i; i++) wideValue = wideValue << 8 | b[i];\n\n      return {\n        start: start,\n        bytes: b,\n        wideValue: wideValue\n      };\n    },\n    getSigned: function (bitLength, byteOffset) {\n      var shift = 32 - bitLength;\n      return this.getUnsigned(bitLength, byteOffset) << shift >> shift;\n    },\n    getUnsigned: function (bitLength, byteOffset) {\n      var value = this._getBitRangeData(bitLength, byteOffset).wideValue >>> -this._bitOffset;\n      return 32 > bitLength ? value & ~(-1 << bitLength) : value;\n    },\n    _setBinaryFloat: function (byteOffset, value, mantSize, expSize, littleEndian) {\n      var exponent,\n          mantissa,\n          signBit = 0 > value ? 1 : 0,\n          eMax = ~(-1 << expSize - 1),\n          eMin = 1 - eMax;\n      0 > value && (value = -value), 0 === value ? (exponent = 0, mantissa = 0) : isNaN(value) ? (exponent = 2 * eMax + 1, mantissa = 1) : 1 / 0 === value ? (exponent = 2 * eMax + 1, mantissa = 0) : (exponent = Math.floor(Math.log(value) / Math.LN2), exponent >= eMin && eMax >= exponent ? (mantissa = Math.floor((value * pow2(-exponent) - 1) * pow2(mantSize)), exponent += eMax) : (mantissa = Math.floor(value / pow2(eMin - mantSize)), exponent = 0));\n\n      for (var b = []; mantSize >= 8;) b.push(mantissa % 256), mantissa = Math.floor(mantissa / 256), mantSize -= 8;\n\n      for (exponent = exponent << mantSize | mantissa, expSize += mantSize; expSize >= 8;) b.push(255 & exponent), exponent >>>= 8, expSize -= 8;\n\n      b.push(signBit << expSize | exponent), this._setBytes(byteOffset, b, littleEndian);\n    },\n    _setFloat32: function (byteOffset, value, littleEndian) {\n      this._setBinaryFloat(byteOffset, value, 23, 8, littleEndian);\n    },\n    _setFloat64: function (byteOffset, value, littleEndian) {\n      this._setBinaryFloat(byteOffset, value, 52, 11, littleEndian);\n    },\n    _set64: function (Type, byteOffset, value, littleEndian) {\n      \"object\" != typeof value && (value = Type.fromNumber(value)), littleEndian = defined(littleEndian, this._littleEndian), byteOffset = defined(byteOffset, this._offset);\n      var parts = littleEndian ? {\n        lo: 0,\n        hi: 4\n      } : {\n        lo: 4,\n        hi: 0\n      };\n\n      for (var partName in parts) this.setUint32(byteOffset + parts[partName], value[partName], littleEndian);\n\n      this._offset = byteOffset + 8;\n    },\n    setInt64: function (byteOffset, value, littleEndian) {\n      this._set64(Int64, byteOffset, value, littleEndian);\n    },\n    setUint64: function (byteOffset, value, littleEndian) {\n      this._set64(Uint64, byteOffset, value, littleEndian);\n    },\n    _setUint32: function (byteOffset, value, littleEndian) {\n      this._setBytes(byteOffset, [255 & value, value >>> 8 & 255, value >>> 16 & 255, value >>> 24], littleEndian);\n    },\n    _setUint16: function (byteOffset, value, littleEndian) {\n      this._setBytes(byteOffset, [255 & value, value >>> 8 & 255], littleEndian);\n    },\n    _setUint8: function (byteOffset, value) {\n      this._setBytes(byteOffset, [255 & value]);\n    },\n    setUnsigned: function (byteOffset, value, bitLength) {\n      var data = this._getBitRangeData(bitLength, byteOffset),\n          wideValue = data.wideValue,\n          b = data.bytes;\n\n      wideValue &= ~(~(-1 << bitLength) << -this._bitOffset), wideValue |= (32 > bitLength ? value & ~(-1 << bitLength) : value) << -this._bitOffset;\n\n      for (var i = b.length - 1; i >= 0; i--) b[i] = 255 & wideValue, wideValue >>>= 8;\n\n      this._setBytes(data.start, b, !0);\n    }\n  },\n      nodeNaming = {\n    Int8: \"Int8\",\n    Int16: \"Int16\",\n    Int32: \"Int32\",\n    Uint8: \"UInt8\",\n    Uint16: \"UInt16\",\n    Uint32: \"UInt32\",\n    Float32: \"Float\",\n    Float64: \"Double\"\n  };\n\n  proto._nodeBufferAction = function (type, isReadAction, byteOffset, littleEndian, value) {\n    this._offset = byteOffset + dataTypes[type];\n    var nodeName = nodeNaming[type] + (\"Int8\" === type || \"Uint8\" === type ? \"\" : littleEndian ? \"LE\" : \"BE\");\n    return byteOffset += this.byteOffset, isReadAction ? this.buffer[\"read\" + nodeName](byteOffset) : this.buffer[\"write\" + nodeName](value, byteOffset);\n  };\n\n  for (var type in dataTypes) !function (type) {\n    proto[\"get\" + type] = function (byteOffset, littleEndian) {\n      return this._action(type, !0, byteOffset, littleEndian);\n    }, proto[\"set\" + type] = function (byteOffset, value, littleEndian) {\n      this._action(type, !1, byteOffset, littleEndian, value);\n    };\n  }(type);\n\n  proto._setInt32 = proto._setUint32, proto._setInt16 = proto._setUint16, proto._setInt8 = proto._setUint8, proto.setSigned = proto.setUnsigned;\n\n  for (var method in proto) \"set\" === method.slice(0, 3) && !function (type) {\n    proto[\"write\" + type] = function () {\n      Array.prototype.unshift.call(arguments, void 0), this[\"set\" + type].apply(this, arguments);\n    };\n  }(method.slice(3));\n\n  return jDataView;\n});","map":{"version":3,"names":["factory","global","module","exports","is","obj","Ctor","constructor","Object","prototype","toString","call","name","arrayFrom","arrayLike","forceCopy","Array","slice","defined","value","defaultValue","jDataView","buffer","byteOffset","byteLength","littleEndian","result","_littleEndian","wrapBuffer","_isArrayBuffer","compatibility","ArrayBuffer","_isPixelData","_isDataView","DataView","_isNodeBuffer","NodeBuffer","Buffer","TypeError","bufferLength","length","_offset","_bitOffset","_view","_checkBounds","_engineAction","_dataViewAction","_nodeBufferAction","_arrayBufferAction","_arrayAction","getCharCodes","string","Type","Uint8Array","codes","i","charCodeAt","pow2","n","Math","pow","Uint64","lo","hi","Int64","apply","arguments","PixelData","TextEncoder","TextDecoder","writeFloatLE","e","dataTypes","Int8","Int16","Int32","Uint8","Uint16","Uint32","Float32","Float64","fill","view","from","valueOf","Number","fromNumber","number","floor","create","unsigned","proto","maxLength","RangeError","_action","type","isReadAction","typedArray","size","TypedArray","bytes","getBytes","_setBytes","_getBytes","reverse","toArray","set","copy","setBytes","getString","encoding","decode","String","fromCharCode","decodeURIComponent","escape","setString","subString","write","encode","unescape","encodeURIComponent","getChar","setChar","character","tell","seek","skip","start","end","normalizeOffset","offset","alignBy","byteCount","_getFloat64","b","sign","exponent","mantissa","_getFloat32","_get64","parts","getUint32","getInt64","getUint64","_getInt32","_getUint32","_getInt16","_getUint16","_getInt8","_getUint8","_getBitRangeData","bitLength","startBit","endBit","wideValue","getSigned","shift","getUnsigned","_setBinaryFloat","mantSize","expSize","signBit","eMax","eMin","isNaN","log","LN2","push","_setFloat32","_setFloat64","_set64","partName","setUint32","setInt64","setUint64","_setUint32","_setUint16","_setUint8","setUnsigned","data","nodeNaming","nodeName","_setInt32","_setInt16","_setInt8","setSigned","method","unshift"],"sources":["/home/daniil/github/steamApp/node_modules/jdataview/dist/node/jdataview.js"],"sourcesContent":["!function(factory) {\n    var global = this;\n    module.exports = factory(global);\n}(function(global) {\n    \"use strict\";\n    function is(obj, Ctor) {\n        return \"object\" != typeof obj || null === obj ? !1 : obj.constructor === Ctor || Object.prototype.toString.call(obj) === \"[object \" + Ctor.name + \"]\";\n    }\n    function arrayFrom(arrayLike, forceCopy) {\n        return !forceCopy && is(arrayLike, Array) ? arrayLike : Array.prototype.slice.call(arrayLike);\n    }\n    function defined(value, defaultValue) {\n        return void 0 !== value ? value : defaultValue;\n    }\n    function jDataView(buffer, byteOffset, byteLength, littleEndian) {\n        if (jDataView.is(buffer)) {\n            var result = buffer.slice(byteOffset, byteOffset + byteLength);\n            return result._littleEndian = defined(littleEndian, result._littleEndian), result;\n        }\n        if (!jDataView.is(this)) return new jDataView(buffer, byteOffset, byteLength, littleEndian);\n        if (this.buffer = buffer = jDataView.wrapBuffer(buffer), this._isArrayBuffer = compatibility.ArrayBuffer && is(buffer, ArrayBuffer), \n        this._isPixelData = !1, this._isDataView = compatibility.DataView && this._isArrayBuffer, \n        this._isNodeBuffer = !0 && compatibility.NodeBuffer && is(buffer, Buffer), !this._isNodeBuffer && !this._isArrayBuffer && !is(buffer, Array)) throw new TypeError(\"jDataView buffer has an incompatible type\");\n        this._littleEndian = !!littleEndian;\n        var bufferLength = \"byteLength\" in buffer ? buffer.byteLength : buffer.length;\n        this.byteOffset = byteOffset = defined(byteOffset, 0), this.byteLength = byteLength = defined(byteLength, bufferLength - byteOffset), \n        this._offset = this._bitOffset = 0, this._isDataView ? this._view = new DataView(buffer, byteOffset, byteLength) : this._checkBounds(byteOffset, byteLength, bufferLength), \n        this._engineAction = this._isDataView ? this._dataViewAction : this._isNodeBuffer ? this._nodeBufferAction : this._isArrayBuffer ? this._arrayBufferAction : this._arrayAction;\n    }\n    function getCharCodes(string) {\n        if (compatibility.NodeBuffer) return new Buffer(string, \"binary\");\n        for (var Type = compatibility.ArrayBuffer ? Uint8Array : Array, codes = new Type(string.length), i = 0, length = string.length; length > i; i++) codes[i] = 255 & string.charCodeAt(i);\n        return codes;\n    }\n    function pow2(n) {\n        return n >= 0 && 31 > n ? 1 << n : pow2[n] || (pow2[n] = Math.pow(2, n));\n    }\n    function Uint64(lo, hi) {\n        this.lo = lo, this.hi = hi;\n    }\n    function Int64() {\n        Uint64.apply(this, arguments);\n    }\n    var compatibility = {\n        NodeBuffer: !0 && \"Buffer\" in global,\n        DataView: \"DataView\" in global,\n        ArrayBuffer: \"ArrayBuffer\" in global,\n        PixelData: !1\n    }, TextEncoder = global.TextEncoder, TextDecoder = global.TextDecoder;\n    compatibility.NodeBuffer && !function(buffer) {\n        try {\n            buffer.writeFloatLE(1/0, 0);\n        } catch (e) {\n            compatibility.NodeBuffer = !1;\n        }\n    }(new Buffer(4));\n    var dataTypes = {\n        Int8: 1,\n        Int16: 2,\n        Int32: 4,\n        Uint8: 1,\n        Uint16: 2,\n        Uint32: 4,\n        Float32: 4,\n        Float64: 8\n    };\n    jDataView.wrapBuffer = function(buffer) {\n        switch (typeof buffer) {\n          case \"number\":\n            if (compatibility.NodeBuffer) buffer = new Buffer(buffer), buffer.fill(0); else if (compatibility.ArrayBuffer) buffer = new Uint8Array(buffer).buffer; else {\n                buffer = new Array(buffer);\n                for (var i = 0; i < buffer.length; i++) buffer[i] = 0;\n            }\n            return buffer;\n\n          case \"string\":\n            buffer = getCharCodes(buffer);\n\n          default:\n            return \"length\" in buffer && !(compatibility.NodeBuffer && is(buffer, Buffer) || compatibility.ArrayBuffer && is(buffer, ArrayBuffer)) && (compatibility.NodeBuffer ? buffer = new Buffer(buffer) : compatibility.ArrayBuffer ? is(buffer, ArrayBuffer) || (buffer = new Uint8Array(buffer).buffer, \n            is(buffer, ArrayBuffer) || (buffer = new Uint8Array(arrayFrom(buffer, !0)).buffer)) : buffer = arrayFrom(buffer)), \n            buffer;\n        }\n    }, jDataView.is = function(view) {\n        return view && view.jDataView;\n    }, jDataView.from = function() {\n        return new jDataView(arguments);\n    }, jDataView.Uint64 = Uint64, Uint64.prototype = {\n        valueOf: function() {\n            return this.lo + pow2(32) * this.hi;\n        },\n        toString: function() {\n            return Number.prototype.toString.apply(this.valueOf(), arguments);\n        }\n    }, Uint64.fromNumber = function(number) {\n        var hi = Math.floor(number / pow2(32)), lo = number - hi * pow2(32);\n        return new Uint64(lo, hi);\n    }, jDataView.Int64 = Int64, Int64.prototype = \"create\" in Object ? Object.create(Uint64.prototype) : new Uint64(), \n    Int64.prototype.valueOf = function() {\n        return this.hi < pow2(31) ? Uint64.prototype.valueOf.apply(this, arguments) : -(pow2(32) - this.lo + pow2(32) * (pow2(32) - 1 - this.hi));\n    }, Int64.fromNumber = function(number) {\n        var lo, hi;\n        if (number >= 0) {\n            var unsigned = Uint64.fromNumber(number);\n            lo = unsigned.lo, hi = unsigned.hi;\n        } else hi = Math.floor(number / pow2(32)), lo = number - hi * pow2(32), hi += pow2(32);\n        return new Int64(lo, hi);\n    };\n    var proto = jDataView.prototype = {\n        compatibility: compatibility,\n        jDataView: !0,\n        _checkBounds: function(byteOffset, byteLength, maxLength) {\n            if (\"number\" != typeof byteOffset) throw new TypeError(\"Offset is not a number.\");\n            if (\"number\" != typeof byteLength) throw new TypeError(\"Size is not a number.\");\n            if (0 > byteLength) throw new RangeError(\"Length is negative.\");\n            if (0 > byteOffset || byteOffset + byteLength > defined(maxLength, this.byteLength)) throw new RangeError(\"Offsets are out of bounds.\");\n        },\n        _action: function(type, isReadAction, byteOffset, littleEndian, value) {\n            return this._engineAction(type, isReadAction, defined(byteOffset, this._offset), defined(littleEndian, this._littleEndian), value);\n        },\n        _dataViewAction: function(type, isReadAction, byteOffset, littleEndian, value) {\n            return this._offset = byteOffset + dataTypes[type], isReadAction ? this._view[\"get\" + type](byteOffset, littleEndian) : this._view[\"set\" + type](byteOffset, value, littleEndian);\n        },\n        _arrayBufferAction: function(type, isReadAction, byteOffset, littleEndian, value) {\n            var typedArray, size = dataTypes[type], TypedArray = global[type + \"Array\"];\n            if (littleEndian = defined(littleEndian, this._littleEndian), 1 === size || (this.byteOffset + byteOffset) % size === 0 && littleEndian) return typedArray = new TypedArray(this.buffer, this.byteOffset + byteOffset, 1), \n            this._offset = byteOffset + size, isReadAction ? typedArray[0] : typedArray[0] = value;\n            var bytes = new Uint8Array(isReadAction ? this.getBytes(size, byteOffset, littleEndian, !0) : size);\n            return typedArray = new TypedArray(bytes.buffer, 0, 1), isReadAction ? typedArray[0] : (typedArray[0] = value, \n            void this._setBytes(byteOffset, bytes, littleEndian));\n        },\n        _arrayAction: function(type, isReadAction, byteOffset, littleEndian, value) {\n            return isReadAction ? this[\"_get\" + type](byteOffset, littleEndian) : this[\"_set\" + type](byteOffset, value, littleEndian);\n        },\n        _getBytes: function(length, byteOffset, littleEndian) {\n            littleEndian = defined(littleEndian, this._littleEndian), byteOffset = defined(byteOffset, this._offset), \n            length = defined(length, this.byteLength - byteOffset), this._checkBounds(byteOffset, length), \n            byteOffset += this.byteOffset, this._offset = byteOffset - this.byteOffset + length;\n            var result = this._isArrayBuffer ? new Uint8Array(this.buffer, byteOffset, length) : (this.buffer.slice || Array.prototype.slice).call(this.buffer, byteOffset, byteOffset + length);\n            return littleEndian || 1 >= length ? result : arrayFrom(result).reverse();\n        },\n        getBytes: function(length, byteOffset, littleEndian, toArray) {\n            var result = this._getBytes(length, byteOffset, defined(littleEndian, !0));\n            return toArray ? arrayFrom(result) : result;\n        },\n        _setBytes: function(byteOffset, bytes, littleEndian) {\n            var length = bytes.length;\n            if (0 !== length) {\n                if (littleEndian = defined(littleEndian, this._littleEndian), byteOffset = defined(byteOffset, this._offset), \n                this._checkBounds(byteOffset, length), !littleEndian && length > 1 && (bytes = arrayFrom(bytes, !0).reverse()), \n                byteOffset += this.byteOffset, this._isArrayBuffer) new Uint8Array(this.buffer, byteOffset, length).set(bytes); else if (this._isNodeBuffer) new Buffer(bytes).copy(this.buffer, byteOffset); else for (var i = 0; length > i; i++) this.buffer[byteOffset + i] = bytes[i];\n                this._offset = byteOffset - this.byteOffset + length;\n            }\n        },\n        setBytes: function(byteOffset, bytes, littleEndian) {\n            this._setBytes(byteOffset, bytes, defined(littleEndian, !0));\n        },\n        getString: function(byteLength, byteOffset, encoding) {\n            if (this._isNodeBuffer) return byteOffset = defined(byteOffset, this._offset), byteLength = defined(byteLength, this.byteLength - byteOffset), \n            this._checkBounds(byteOffset, byteLength), this._offset = byteOffset + byteLength, \n            this.buffer.toString(encoding || \"binary\", this.byteOffset + byteOffset, this.byteOffset + this._offset);\n            var bytes = this._getBytes(byteLength, byteOffset, !0);\n            if (encoding = \"utf8\" === encoding ? \"utf-8\" : encoding || \"binary\", TextDecoder && \"binary\" !== encoding) return new TextDecoder(encoding).decode(this._isArrayBuffer ? bytes : new Uint8Array(bytes));\n            var string = \"\";\n            byteLength = bytes.length;\n            for (var i = 0; byteLength > i; i++) string += String.fromCharCode(bytes[i]);\n            return \"utf-8\" === encoding && (string = decodeURIComponent(escape(string))), string;\n        },\n        setString: function(byteOffset, subString, encoding) {\n            if (this._isNodeBuffer) return byteOffset = defined(byteOffset, this._offset), this._checkBounds(byteOffset, subString.length), \n            void (this._offset = byteOffset + this.buffer.write(subString, this.byteOffset + byteOffset, encoding || \"binary\"));\n            encoding = \"utf8\" === encoding ? \"utf-8\" : encoding || \"binary\";\n            var bytes;\n            TextEncoder && \"binary\" !== encoding ? bytes = new TextEncoder(encoding).encode(subString) : (\"utf-8\" === encoding && (subString = unescape(encodeURIComponent(subString))), \n            bytes = getCharCodes(subString)), this._setBytes(byteOffset, bytes, !0);\n        },\n        getChar: function(byteOffset) {\n            return this.getString(1, byteOffset);\n        },\n        setChar: function(byteOffset, character) {\n            this.setString(byteOffset, character);\n        },\n        tell: function() {\n            return this._offset;\n        },\n        seek: function(byteOffset) {\n            return this._checkBounds(byteOffset, 0), this._offset = byteOffset;\n        },\n        skip: function(byteLength) {\n            return this.seek(this._offset + byteLength);\n        },\n        slice: function(start, end, forceCopy) {\n            function normalizeOffset(offset, byteLength) {\n                return 0 > offset ? offset + byteLength : offset;\n            }\n            return start = normalizeOffset(start, this.byteLength), end = normalizeOffset(defined(end, this.byteLength), this.byteLength), \n            forceCopy ? new jDataView(this.getBytes(end - start, start, !0, !0), void 0, void 0, this._littleEndian) : new jDataView(this.buffer, this.byteOffset + start, end - start, this._littleEndian);\n        },\n        alignBy: function(byteCount) {\n            return this._bitOffset = 0, 1 !== defined(byteCount, 1) ? this.skip(byteCount - (this._offset % byteCount || byteCount)) : this._offset;\n        },\n        _getFloat64: function(byteOffset, littleEndian) {\n            var b = this._getBytes(8, byteOffset, littleEndian), sign = 1 - 2 * (b[7] >> 7), exponent = ((b[7] << 1 & 255) << 3 | b[6] >> 4) - 1023, mantissa = (15 & b[6]) * pow2(48) + b[5] * pow2(40) + b[4] * pow2(32) + b[3] * pow2(24) + b[2] * pow2(16) + b[1] * pow2(8) + b[0];\n            return 1024 === exponent ? 0 !== mantissa ? 0/0 : 1/0 * sign : -1023 === exponent ? sign * mantissa * pow2(-1074) : sign * (1 + mantissa * pow2(-52)) * pow2(exponent);\n        },\n        _getFloat32: function(byteOffset, littleEndian) {\n            var b = this._getBytes(4, byteOffset, littleEndian), sign = 1 - 2 * (b[3] >> 7), exponent = (b[3] << 1 & 255 | b[2] >> 7) - 127, mantissa = (127 & b[2]) << 16 | b[1] << 8 | b[0];\n            return 128 === exponent ? 0 !== mantissa ? 0/0 : 1/0 * sign : -127 === exponent ? sign * mantissa * pow2(-149) : sign * (1 + mantissa * pow2(-23)) * pow2(exponent);\n        },\n        _get64: function(Type, byteOffset, littleEndian) {\n            littleEndian = defined(littleEndian, this._littleEndian), byteOffset = defined(byteOffset, this._offset);\n            for (var parts = littleEndian ? [ 0, 4 ] : [ 4, 0 ], i = 0; 2 > i; i++) parts[i] = this.getUint32(byteOffset + parts[i], littleEndian);\n            return this._offset = byteOffset + 8, new Type(parts[0], parts[1]);\n        },\n        getInt64: function(byteOffset, littleEndian) {\n            return this._get64(Int64, byteOffset, littleEndian);\n        },\n        getUint64: function(byteOffset, littleEndian) {\n            return this._get64(Uint64, byteOffset, littleEndian);\n        },\n        _getInt32: function(byteOffset, littleEndian) {\n            var b = this._getBytes(4, byteOffset, littleEndian);\n            return b[3] << 24 | b[2] << 16 | b[1] << 8 | b[0];\n        },\n        _getUint32: function(byteOffset, littleEndian) {\n            return this._getInt32(byteOffset, littleEndian) >>> 0;\n        },\n        _getInt16: function(byteOffset, littleEndian) {\n            return this._getUint16(byteOffset, littleEndian) << 16 >> 16;\n        },\n        _getUint16: function(byteOffset, littleEndian) {\n            var b = this._getBytes(2, byteOffset, littleEndian);\n            return b[1] << 8 | b[0];\n        },\n        _getInt8: function(byteOffset) {\n            return this._getUint8(byteOffset) << 24 >> 24;\n        },\n        _getUint8: function(byteOffset) {\n            return this._getBytes(1, byteOffset)[0];\n        },\n        _getBitRangeData: function(bitLength, byteOffset) {\n            var startBit = (defined(byteOffset, this._offset) << 3) + this._bitOffset, endBit = startBit + bitLength, start = startBit >>> 3, end = endBit + 7 >>> 3, b = this._getBytes(end - start, start, !0), wideValue = 0;\n            (this._bitOffset = 7 & endBit) && (this._bitOffset -= 8);\n            for (var i = 0, length = b.length; length > i; i++) wideValue = wideValue << 8 | b[i];\n            return {\n                start: start,\n                bytes: b,\n                wideValue: wideValue\n            };\n        },\n        getSigned: function(bitLength, byteOffset) {\n            var shift = 32 - bitLength;\n            return this.getUnsigned(bitLength, byteOffset) << shift >> shift;\n        },\n        getUnsigned: function(bitLength, byteOffset) {\n            var value = this._getBitRangeData(bitLength, byteOffset).wideValue >>> -this._bitOffset;\n            return 32 > bitLength ? value & ~(-1 << bitLength) : value;\n        },\n        _setBinaryFloat: function(byteOffset, value, mantSize, expSize, littleEndian) {\n            var exponent, mantissa, signBit = 0 > value ? 1 : 0, eMax = ~(-1 << expSize - 1), eMin = 1 - eMax;\n            0 > value && (value = -value), 0 === value ? (exponent = 0, mantissa = 0) : isNaN(value) ? (exponent = 2 * eMax + 1, \n            mantissa = 1) : 1/0 === value ? (exponent = 2 * eMax + 1, mantissa = 0) : (exponent = Math.floor(Math.log(value) / Math.LN2), \n            exponent >= eMin && eMax >= exponent ? (mantissa = Math.floor((value * pow2(-exponent) - 1) * pow2(mantSize)), \n            exponent += eMax) : (mantissa = Math.floor(value / pow2(eMin - mantSize)), exponent = 0));\n            for (var b = []; mantSize >= 8; ) b.push(mantissa % 256), mantissa = Math.floor(mantissa / 256), \n            mantSize -= 8;\n            for (exponent = exponent << mantSize | mantissa, expSize += mantSize; expSize >= 8; ) b.push(255 & exponent), \n            exponent >>>= 8, expSize -= 8;\n            b.push(signBit << expSize | exponent), this._setBytes(byteOffset, b, littleEndian);\n        },\n        _setFloat32: function(byteOffset, value, littleEndian) {\n            this._setBinaryFloat(byteOffset, value, 23, 8, littleEndian);\n        },\n        _setFloat64: function(byteOffset, value, littleEndian) {\n            this._setBinaryFloat(byteOffset, value, 52, 11, littleEndian);\n        },\n        _set64: function(Type, byteOffset, value, littleEndian) {\n            \"object\" != typeof value && (value = Type.fromNumber(value)), littleEndian = defined(littleEndian, this._littleEndian), \n            byteOffset = defined(byteOffset, this._offset);\n            var parts = littleEndian ? {\n                lo: 0,\n                hi: 4\n            } : {\n                lo: 4,\n                hi: 0\n            };\n            for (var partName in parts) this.setUint32(byteOffset + parts[partName], value[partName], littleEndian);\n            this._offset = byteOffset + 8;\n        },\n        setInt64: function(byteOffset, value, littleEndian) {\n            this._set64(Int64, byteOffset, value, littleEndian);\n        },\n        setUint64: function(byteOffset, value, littleEndian) {\n            this._set64(Uint64, byteOffset, value, littleEndian);\n        },\n        _setUint32: function(byteOffset, value, littleEndian) {\n            this._setBytes(byteOffset, [ 255 & value, value >>> 8 & 255, value >>> 16 & 255, value >>> 24 ], littleEndian);\n        },\n        _setUint16: function(byteOffset, value, littleEndian) {\n            this._setBytes(byteOffset, [ 255 & value, value >>> 8 & 255 ], littleEndian);\n        },\n        _setUint8: function(byteOffset, value) {\n            this._setBytes(byteOffset, [ 255 & value ]);\n        },\n        setUnsigned: function(byteOffset, value, bitLength) {\n            var data = this._getBitRangeData(bitLength, byteOffset), wideValue = data.wideValue, b = data.bytes;\n            wideValue &= ~(~(-1 << bitLength) << -this._bitOffset), wideValue |= (32 > bitLength ? value & ~(-1 << bitLength) : value) << -this._bitOffset;\n            for (var i = b.length - 1; i >= 0; i--) b[i] = 255 & wideValue, wideValue >>>= 8;\n            this._setBytes(data.start, b, !0);\n        }\n    }, nodeNaming = {\n        Int8: \"Int8\",\n        Int16: \"Int16\",\n        Int32: \"Int32\",\n        Uint8: \"UInt8\",\n        Uint16: \"UInt16\",\n        Uint32: \"UInt32\",\n        Float32: \"Float\",\n        Float64: \"Double\"\n    };\n    proto._nodeBufferAction = function(type, isReadAction, byteOffset, littleEndian, value) {\n        this._offset = byteOffset + dataTypes[type];\n        var nodeName = nodeNaming[type] + (\"Int8\" === type || \"Uint8\" === type ? \"\" : littleEndian ? \"LE\" : \"BE\");\n        return byteOffset += this.byteOffset, isReadAction ? this.buffer[\"read\" + nodeName](byteOffset) : this.buffer[\"write\" + nodeName](value, byteOffset);\n    };\n    for (var type in dataTypes) !function(type) {\n        proto[\"get\" + type] = function(byteOffset, littleEndian) {\n            return this._action(type, !0, byteOffset, littleEndian);\n        }, proto[\"set\" + type] = function(byteOffset, value, littleEndian) {\n            this._action(type, !1, byteOffset, littleEndian, value);\n        };\n    }(type);\n    proto._setInt32 = proto._setUint32, proto._setInt16 = proto._setUint16, proto._setInt8 = proto._setUint8, \n    proto.setSigned = proto.setUnsigned;\n    for (var method in proto) \"set\" === method.slice(0, 3) && !function(type) {\n        proto[\"write\" + type] = function() {\n            Array.prototype.unshift.call(arguments, void 0), this[\"set\" + type].apply(this, arguments);\n        };\n    }(method.slice(3));\n    return jDataView;\n});"],"mappings":"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"},"metadata":{},"sourceType":"script"}