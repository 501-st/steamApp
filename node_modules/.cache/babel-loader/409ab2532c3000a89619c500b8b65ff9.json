{"ast":null,"code":"const defaultState = {\n  containers: [],\n  isPro: false\n};\nconst ADD_CONTAINER = \"ADD_CONTAINER\";\nconst REMOVE_CONTAINER = \"REMOVE_CONTAINER\";\nconst ADD_ITEM = \"ADD_ITEM\";\nconst ADD_BENEFIT = \"ADD_BENEFIT\";\nconst DELETE_ITEM = \"DELETE_ITEM\";\nconst CONTAINER_STATUS_CHECKED = \"CONTAINER_STATUS_CHECKED\";\nconst UPGRADE_TO_PRO = \"UPGRADE_TO_PRO\";\nconst DOWNGRADE = \"DOWNGRADE\";\nexport let indexOfContainer = 0;\nexport let indexOfItem = 0;\nexport const containerReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_CONTAINER:\n      return { ...state,\n        containers: [...state.containers, action.payload]\n      };\n\n    case REMOVE_CONTAINER:\n      return { ...state,\n        containers: state.containers.filter(container => container.id !== action.payload)\n      };\n\n    case CONTAINER_STATUS_CHECKED:\n      return { ...state,\n        containers: state.containers.map(container => {\n          if (container.id === action.payload.containerId) {\n            return { ...container,\n              checked: true\n            };\n          } else return container;\n        })\n      };\n\n    case ADD_ITEM:\n      return { ...state,\n        containers: state.containers.map(container => {\n          if (container.id === action.payload.containerId) {\n            return { ...container,\n              checked: false,\n              data: [...container.data, action.payload]\n            };\n          } else return container;\n        })\n      };\n\n    case ADD_BENEFIT:\n      return { ...state,\n        containers: state.containers.map(container => {\n          if (container.id === action.payload.containerId) {\n            return { ...container,\n              benefit: action.payload.benefit\n            };\n          } else return container;\n        })\n      };\n\n    case DELETE_ITEM:\n      return { ...state,\n        containers: state.containers.map(container => {\n          if (container.id === action.payload.containerId) {\n            return { ...container,\n              checked: false,\n              data: container.data.filter(item => item.id !== action.payload.itemId)\n            };\n          } else return container;\n        })\n      };\n\n    case UPGRADE_TO_PRO:\n      return { ...state,\n        isPro: true\n      };\n\n    case DOWNGRADE:\n      return { ...state,\n        isPro: false\n      };\n\n    default:\n      return state;\n  }\n};\nexport const addContainerAction = payload => {\n  indexOfContainer++;\n  payload = { ...payload,\n    id: indexOfContainer\n  };\n  return {\n    type: ADD_CONTAINER,\n    payload\n  };\n};\nexport const removeContainerAction = payload => {\n  return {\n    type: REMOVE_CONTAINER,\n    payload\n  };\n};\nexport const containerCheckedAction = payload => {\n  return {\n    type: CONTAINER_STATUS_CHECKED,\n    payload\n  };\n};\nexport const addBenefitToContainerAction = payload => {\n  return {\n    type: ADD_BENEFIT,\n    payload\n  };\n};\nexport const addItem = payload => {\n  indexOfItem++;\n  payload = { ...payload,\n    id: indexOfItem\n  };\n  return {\n    type: ADD_ITEM,\n    payload\n  };\n};\nexport const deleteItem = payload => {\n  return {\n    type: DELETE_ITEM,\n    payload\n  };\n};\nexport const Upgrade = () => {\n  return {\n    type: UPGRADE_TO_PRO\n  };\n};\n_c = Upgrade;\nexport const Downgrade = () => {\n  return {\n    type: DOWNGRADE\n  };\n};\n_c2 = Downgrade;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Upgrade\");\n$RefreshReg$(_c2, \"Downgrade\");","map":{"version":3,"names":["defaultState","containers","isPro","ADD_CONTAINER","REMOVE_CONTAINER","ADD_ITEM","ADD_BENEFIT","DELETE_ITEM","CONTAINER_STATUS_CHECKED","UPGRADE_TO_PRO","DOWNGRADE","indexOfContainer","indexOfItem","containerReducer","state","action","type","payload","filter","container","id","map","containerId","checked","data","benefit","item","itemId","addContainerAction","removeContainerAction","containerCheckedAction","addBenefitToContainerAction","addItem","deleteItem","Upgrade","Downgrade"],"sources":["/home/daniil/github/steamApp/src/store/containerReducer.js"],"sourcesContent":["const defaultState = {\n    containers: [],\n    isPro: false\n}\n\nconst ADD_CONTAINER = \"ADD_CONTAINER\"\nconst REMOVE_CONTAINER = \"REMOVE_CONTAINER\"\n\nconst ADD_ITEM = \"ADD_ITEM\"\nconst ADD_BENEFIT = \"ADD_BENEFIT\"\nconst DELETE_ITEM = \"DELETE_ITEM\"\nconst CONTAINER_STATUS_CHECKED = \"CONTAINER_STATUS_CHECKED\"\n\nconst UPGRADE_TO_PRO = \"UPGRADE_TO_PRO\"\nconst DOWNGRADE = \"DOWNGRADE\"\n\nexport let indexOfContainer = 0\nexport let indexOfItem = 0\n\nexport const containerReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case ADD_CONTAINER:\n            return {...state, containers: [...state.containers, action.payload]}\n        case REMOVE_CONTAINER:\n            return {...state, containers: state.containers.filter(container => container.id !== action.payload)}\n        case CONTAINER_STATUS_CHECKED:\n            return {\n                ...state, containers: state.containers.map((container) => {\n                    if (container.id === action.payload.containerId) {\n                        return {...container, checked: true}\n                    } else return container\n                })\n            }\n        case ADD_ITEM:\n            return {\n                ...state, containers: state.containers.map((container) => {\n                    if (container.id === action.payload.containerId) {\n                        return {...container, checked: false, data: [...container.data, action.payload]}\n                    } else return container\n                })\n            }\n        case ADD_BENEFIT:\n            return {\n                ...state, containers: state.containers.map((container) => {\n                    if (container.id === action.payload.containerId) {\n                        return {...container, benefit: action.payload.benefit}\n                    } else return container\n                })\n            }\n        case DELETE_ITEM:\n            return {\n                ...state, containers: state.containers.map((container) => {\n                    if (container.id === action.payload.containerId) {\n                        return {\n                            ...container,\n                            checked: false,\n                            data: container.data.filter(item => item.id !== action.payload.itemId)\n                        }\n                    } else return container\n                })\n            }\n        case UPGRADE_TO_PRO:\n            return {...state, isPro: true}\n        case DOWNGRADE:\n            return {...state, isPro: false}\n        default:\n            return state\n    }\n}\n\nexport const addContainerAction = (payload) => {\n    indexOfContainer++\n    payload = {...payload, id: indexOfContainer}\n    return {\n        type: ADD_CONTAINER,\n        payload\n    }\n}\n\nexport const removeContainerAction = (payload) => {\n    return {\n        type: REMOVE_CONTAINER,\n        payload\n    }\n}\n\nexport const containerCheckedAction = (payload) => {\n    return {\n        type: CONTAINER_STATUS_CHECKED,\n        payload\n    }\n}\n\nexport const addBenefitToContainerAction = (payload) => {\n    return {\n        type: ADD_BENEFIT,\n        payload\n    }\n}\n\nexport const addItem = (payload) => {\n    indexOfItem++\n    payload = {...payload, id: indexOfItem}\n    return {\n        type: ADD_ITEM,\n        payload\n    }\n}\n\nexport const deleteItem = (payload) => {\n    return {\n        type: DELETE_ITEM,\n        payload\n    }\n}\n\nexport const Upgrade = () => {\n    return {\n        type: UPGRADE_TO_PRO\n    }\n}\n\nexport const Downgrade = () => {\n    return {\n        type: DOWNGRADE\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}